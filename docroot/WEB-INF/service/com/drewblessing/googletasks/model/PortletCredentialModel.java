/**
 * Copyright (c) 2000-2012 Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package com.drewblessing.googletasks.model;

import com.liferay.portal.kernel.bean.AutoEscape;
import com.liferay.portal.kernel.exception.SystemException;
import com.liferay.portal.model.AuditedModel;
import com.liferay.portal.model.BaseModel;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.service.ServiceContext;

import com.liferay.portlet.expando.model.ExpandoBridge;

import java.io.Serializable;

import java.util.Date;

/**
 * The base model interface for the PortletCredential service. Represents a row in the &quot;GT_PortletCredential&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This interface and its corresponding implementation {@link com.drewblessing.googletasks.model.impl.PortletCredentialModelImpl} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link com.drewblessing.googletasks.model.impl.PortletCredentialImpl}.
 * </p>
 *
 * @author Drew A. Blessing
 * @see PortletCredential
 * @see com.drewblessing.googletasks.model.impl.PortletCredentialImpl
 * @see com.drewblessing.googletasks.model.impl.PortletCredentialModelImpl
 * @generated
 */
public interface PortletCredentialModel extends AuditedModel,
	BaseModel<PortletCredential> {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this interface directly. All methods that expect a portlet credential model instance should use the {@link PortletCredential} interface instead.
	 */

	/**
	 * Returns the primary key of this portlet credential.
	 *
	 * @return the primary key of this portlet credential
	 */
	public long getPrimaryKey();

	/**
	 * Sets the primary key of this portlet credential.
	 *
	 * @param primaryKey the primary key of this portlet credential
	 */
	public void setPrimaryKey(long primaryKey);

	/**
	 * Returns the ID of this portlet credential.
	 *
	 * @return the ID of this portlet credential
	 */
	public long getId();

	/**
	 * Sets the ID of this portlet credential.
	 *
	 * @param id the ID of this portlet credential
	 */
	public void setId(long id);

	/**
	 * Returns the company ID of this portlet credential.
	 *
	 * @return the company ID of this portlet credential
	 */
	public long getCompanyId();

	/**
	 * Sets the company ID of this portlet credential.
	 *
	 * @param companyId the company ID of this portlet credential
	 */
	public void setCompanyId(long companyId);

	/**
	 * Returns the user ID of this portlet credential.
	 *
	 * @return the user ID of this portlet credential
	 */
	public long getUserId();

	/**
	 * Sets the user ID of this portlet credential.
	 *
	 * @param userId the user ID of this portlet credential
	 */
	public void setUserId(long userId);

	/**
	 * Returns the user uuid of this portlet credential.
	 *
	 * @return the user uuid of this portlet credential
	 * @throws SystemException if a system exception occurred
	 */
	public String getUserUuid() throws SystemException;

	/**
	 * Sets the user uuid of this portlet credential.
	 *
	 * @param userUuid the user uuid of this portlet credential
	 */
	public void setUserUuid(String userUuid);

	/**
	 * Returns the user name of this portlet credential.
	 *
	 * @return the user name of this portlet credential
	 */
	@AutoEscape
	public String getUserName();

	/**
	 * Sets the user name of this portlet credential.
	 *
	 * @param userName the user name of this portlet credential
	 */
	public void setUserName(String userName);

	/**
	 * Returns the create date of this portlet credential.
	 *
	 * @return the create date of this portlet credential
	 */
	public Date getCreateDate();

	/**
	 * Sets the create date of this portlet credential.
	 *
	 * @param createDate the create date of this portlet credential
	 */
	public void setCreateDate(Date createDate);

	/**
	 * Returns the modified date of this portlet credential.
	 *
	 * @return the modified date of this portlet credential
	 */
	public Date getModifiedDate();

	/**
	 * Sets the modified date of this portlet credential.
	 *
	 * @param modifiedDate the modified date of this portlet credential
	 */
	public void setModifiedDate(Date modifiedDate);

	/**
	 * Returns the google ID of this portlet credential.
	 *
	 * @return the google ID of this portlet credential
	 */
	@AutoEscape
	public String getGoogleId();

	/**
	 * Sets the google ID of this portlet credential.
	 *
	 * @param googleId the google ID of this portlet credential
	 */
	public void setGoogleId(String googleId);

	/**
	 * Returns the user email of this portlet credential.
	 *
	 * @return the user email of this portlet credential
	 */
	@AutoEscape
	public String getUserEmail();

	/**
	 * Sets the user email of this portlet credential.
	 *
	 * @param userEmail the user email of this portlet credential
	 */
	public void setUserEmail(String userEmail);

	/**
	 * Returns the user picture of this portlet credential.
	 *
	 * @return the user picture of this portlet credential
	 */
	@AutoEscape
	public String getUserPicture();

	/**
	 * Sets the user picture of this portlet credential.
	 *
	 * @param userPicture the user picture of this portlet credential
	 */
	public void setUserPicture(String userPicture);

	/**
	 * Returns the access token of this portlet credential.
	 *
	 * @return the access token of this portlet credential
	 */
	@AutoEscape
	public String getAccessToken();

	/**
	 * Sets the access token of this portlet credential.
	 *
	 * @param accessToken the access token of this portlet credential
	 */
	public void setAccessToken(String accessToken);

	/**
	 * Returns the refresh token of this portlet credential.
	 *
	 * @return the refresh token of this portlet credential
	 */
	@AutoEscape
	public String getRefreshToken();

	/**
	 * Sets the refresh token of this portlet credential.
	 *
	 * @param refreshToken the refresh token of this portlet credential
	 */
	public void setRefreshToken(String refreshToken);

	/**
	 * Returns the expires of this portlet credential.
	 *
	 * @return the expires of this portlet credential
	 */
	public long getExpires();

	/**
	 * Sets the expires of this portlet credential.
	 *
	 * @param expires the expires of this portlet credential
	 */
	public void setExpires(long expires);

	public boolean isNew();

	public void setNew(boolean n);

	public boolean isCachedModel();

	public void setCachedModel(boolean cachedModel);

	public boolean isEscapedModel();

	public Serializable getPrimaryKeyObj();

	public void setPrimaryKeyObj(Serializable primaryKeyObj);

	public ExpandoBridge getExpandoBridge();

	public void setExpandoBridgeAttributes(ServiceContext serviceContext);

	public Object clone();

	public int compareTo(PortletCredential portletCredential);

	public int hashCode();

	public CacheModel<PortletCredential> toCacheModel();

	public PortletCredential toEscapedModel();

	public String toString();

	public String toXmlString();
}